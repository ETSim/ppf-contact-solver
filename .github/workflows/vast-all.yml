# File: vast-all.yml
# Author: Ryoichi Ando (ryoichi.ando@zozo.com)
# License: Apache v2.0

name: All Examples

on:
  workflow_dispatch:

env:
  VAST_API_KEY: ${{ secrets.VAST_API_KEY }}
  
jobs:
  headless:
    runs-on: ubuntu-latest
    steps:

      - name: check out repo
        uses: actions/checkout@v3

      - name: provision vast
        timeout-minutes: 10
        run: |
          bash .github/workflows/vast/provision.sh $VAST_API_KEY
      
      - name: transfer files
        timeout-minutes: 5
        run: |
          bash /tmp/vast-ci/rsync-command.sh

      - name: warm up
        timeout-minutes: 10
        run: |
          bash .github/workflows/vast/run.sh warmup
          bash /tmp/vast-ci/ssh-command.sh "cd /root/ppf-contact-solver/examples; touch .CLI"
      
      - name: build
        run: |
          bash .github/workflows/vast/run.sh build

      - name: convert
        run: |
          bash .github/workflows/vast/run.sh convert
          
      - name: hang
        run: |
          bash .github/workflows/vast/run.sh run hang.py

      - name: needle
        run: |
          bash .github/workflows/vast/run.sh run needle.py

      - name: trampoline
        run: |
          bash .github/workflows/vast/run.sh run trampoline.py

      - name: curtain
        run: |
          bash .github/workflows/vast/run.sh run curtain.py

      - name: drape
        run: |
          bash .github/workflows/vast/run.sh run drape.py
      
      - name: trapped
        run: |
          bash .github/workflows/vast/run.sh run trapped.py
      
      - name: friction
        run: |
          bash .github/workflows/vast/run.sh run friction.py

      - name: cards
        run: |
          bash .github/workflows/vast/run.sh run cards.py

      - name: stack
        run: |
          bash .github/workflows/vast/run.sh run stack.py

      - name: shutdown
        if: always()
        run: |
          bash /tmp/vast-ci/delete-instance.sh